/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AppRouteImport } from './routes/app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppPrincipalRouteImport } from './routes/_app/principal'
import { Route as AppCalendarRouteImport } from './routes/_app/calendar'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppPrincipalRoute = AppPrincipalRouteImport.update({
  id: '/_app/principal',
  path: '/principal',
  getParentRoute: () => rootRouteImport,
} as any)
const AppCalendarRoute = AppCalendarRouteImport.update({
  id: '/_app/calendar',
  path: '/calendar',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/calendar': typeof AppCalendarRoute
  '/principal': typeof AppPrincipalRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/calendar': typeof AppCalendarRoute
  '/principal': typeof AppPrincipalRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_app/calendar': typeof AppCalendarRoute
  '/_app/principal': typeof AppPrincipalRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/app' | '/login' | '/register' | '/calendar' | '/principal'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/app' | '/login' | '/register' | '/calendar' | '/principal'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/login'
    | '/register'
    | '/_app/calendar'
    | '/_app/principal'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  AppCalendarRoute: typeof AppCalendarRoute
  AppPrincipalRoute: typeof AppPrincipalRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/principal': {
      id: '/_app/principal'
      path: '/principal'
      fullPath: '/principal'
      preLoaderRoute: typeof AppPrincipalRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/calendar': {
      id: '/_app/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof AppCalendarRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  AppCalendarRoute: AppCalendarRoute,
  AppPrincipalRoute: AppPrincipalRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
